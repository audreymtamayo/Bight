---
title: "2023 Vegetation"
format: html
editor: visual
---

## Vegetation 2023

Download packages:

```{r}
library(tidyverse)
library(dplyr)
library(readxl)
library(ggplot2)
library(vegan)

```

Data import

```{r}
Metadata <-read_excel("vegetation-data-2023.xlsx", sheet=1)
Vegetation <-read_excel("vegetation-data-2023.xlsx", sheet=2)
Epifauna <-read_excel("vegetation-data-2023.xlsx", sheet=3)
Cordgrass <-read_excel("vegetation-data-2023.xlsx", sheet=4)


```

Test

```{r}
Vegetation

```

Clean Meta Data

```{r}

Metadata_Clean <- Metadata |> select(estuaryname, stationno, samplecollectiondate, tide, transectreplicate, habitat, method, plotreplicate, vegetated_cover, non_vegetated_cover) |>
  filter(estuaryname == "Malibu Lagoon" | estuaryname == "San Elijo Lagoon" | estuaryname == "Batiquitos Lagoon" | estuaryname == "Goleta Slough" |estuaryname == "Newport Bay" | estuaryname == "Ventura River") |>
rename(Estuary = estuaryname, Station = stationno, Date = samplecollectiondate, Tide = tide, Transect = transectreplicate, Habitat = habitat, Method = method, Quadrat = plotreplicate, VegetatedCover = vegetated_cover, NonVegetatedCover = non_vegetated_cover)
Metadata_Clean
```

Cleaning Vegetation

```{r}
Vegetation_Clean <- Vegetation|> select(estuaryname, stationno, samplecollectiondate, transectreplicate, habitat, method, plotreplicate, scientificname, commonname, status, estimatedcover, tallestplantheight_cm) 
```

```{r}
Vegetation_Clean <- Vegetation_Clean|> filter(estuaryname == "Malibu Lagoon" | estuaryname == "San Elijo Lagoon" | estuaryname == "Batiquitos Lagoon" | estuaryname == "Goleta Slough" |estuaryname == "Newport Bay" | estuaryname == "Ventura River" ) |>
rename(Estuary = estuaryname, Station = stationno, Date = samplecollectiondate, Transect = transectreplicate, Habitat = habitat, Method = method, Quadrat = plotreplicate, ScientificName = scientificname, CommonName = commonname, Status = status, EstimatedCover = estimatedcover, TallestPlantHeight = tallestplantheight_cm)
Vegetation_Clean
```

Cleaning Cordgrass

```{r}
Cordgrass_Clean<- Cordgrass |> select(estuaryname, stationno, samplecollectiondate, transectreplicate, habitat, method, plotreplicate, live_dead, total_stems, plantheight_replicate, plantheight_cm) 
```

Cleaning Cordgrass continued

```{r}
Cordgrass_Clean<- Cordgrass_Clean|> filter(estuaryname == "Malibu Lagoon" | estuaryname == "San Elijo Lagoon" | estuaryname == "Batiquitos Lagoon" | estuaryname == "Goleta Slough" |estuaryname == "Newport Bay" | estuaryname == "Ventura River" ) |>
rename(Estuary = estuaryname, Station = stationno, Date = samplecollectiondate, Transect = transectreplicate, Habitat = habitat, Method = method, Quadrat = plotreplicate, Abundance = total_stems,PlantHeightReplicate = plantheight_replicate, PlantHeight=plantheight_cm, LiveOrDead = live_dead,)

Cordgrass_Clean
```

Combined Data

```{r}
Combined_Cordgrass <- inner_join(Cordgrass_Clean, Metadata_Clean,)

Combined_Vegetation <- inner_join(Vegetation_Clean, Metadata_Clean,)
```

Change -88

```{r}
Combined_Cordgrass[Combined_Cordgrass == -88] <- NA
Combined_Cordgrass
```

Change -88 values & Remove "Not recorded" from columns

```{r}
Combined_Vegetation = filter(Combined_Vegetation, !(ScientificName %in% c("Not recorded", "unknown plant")))
Combined_Vegetation = filter(Combined_Vegetation, !(Status %in% c("Not recorded")))
Combined_Vegetation[Combined_Vegetation == -88] <- NA
Combined_Vegetation[Combined_Vegetation == -88.0] <- NA
Combined_Vegetation$TallestPlantHeight <- round(Combined_Vegetation$TallestPlantHeight)
```

```{r}
Combined_Vegetation <- Combined_Vegetation %>% 
  mutate(Habitat = factor(Habitat, levels = c("Low marsh","Mid marsh", "Unvegetated salt panne","High marsh","Brackish marsh",  "Upland" )))

#Combined_Vegetation$Habitat %>% unique()

```

CSV Files

```{r}
write_csv(Combined_Cordgrass, "Combined_Cordgrass.csv")

write_csv(Combined_Vegetation, "Combined_Vegetation.csv")
```

```{r}
#vegetated cover
plot1 <- ggplot(Combined_Vegetation, aes(x = Estuary, y = VegetatedCover)) + 
  #geom_point() + 
  #geom_jitter() +
  geom_violin()+
  stat_summary(fun = mean, geom = "line") + labs(x = "Sites") + labs(y = "Vegetated Cover") + theme(axis.text.x = element_text(angle = 45, hjust = 1))


```

```{r}
#Vegetated Cover across Sites
plot4 <- ggplot(Combined_Vegetation, aes (x = VegetatedCover, y = Estuary, fill = Habitat)) + geom_boxplot(aes(x = VegetatedCover, y = Estuary, fill = Habitat)) + labs(x = "Vegetated Cover") + labs(y = "Estuary Sites") + labs(title = "Vegetated Cover Percentage Across Sites") + 
  facet_wrap(Estuary ~.)

#vegetative cover divide into 3rds, score sites relative to the other; 
#reorder habitat `brackish, low, mid, high 


plot4.1 <- ggplot(Combined_Vegetation, aes (x = VegetatedCover, y = Estuary, fill = Habitat)) + geom_boxplot(aes(y = VegetatedCover, x = Habitat, fill = Habitat)) + labs(x = "Vegetated Cover") + labs(y = "Estuary Sites") + labs(title = "Vegetated Cover Percentage Across Sites") + 
  facet_wrap(Estuary ~.)

plot4.2 <- ggplot(Combined_Vegetation, aes (x = VegetatedCover, y = Estuary, fill = Estuary)) + geom_boxplot(aes(y = VegetatedCover, x = Estuary, fill = Estuary)) + labs(x = "Estuary") + labs(y = "Vegetated Cover") + labs(title = "Vegetated Cover Percentage Across Sites") + 
  facet_wrap(Habitat ~.) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

\
Tallest Plant Height by Habitat

```{r}
plot5 <- ggplot(Combined_Vegetation, aes (x = TallestPlantHeight, y = Estuary, fill = Habitat)) + geom_boxplot(aes(x = TallestPlantHeight, y = Estuary, fill = Habitat)) + labs(x = "Averages of Tallest Plant") + labs(y = "Estuary Sites") + labs(title = "Averages of Tallest Plant Across Sites")

plot5.1 <- ggplot(Combined_Vegetation, aes (x = Estuary, y = TallestPlantHeight, fill = Estuary)) + geom_boxplot(aes(y = TallestPlantHeight, x = Estuary, fill = Estuary)) + labs(x = "Estuary") + labs(y = "TallestHeightAverage") + labs(title = "Tallest Height Average") + 
  facet_wrap(Habitat ~.) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

Tallest Plant Height by Species in Estuary

```{r}
plot6 <- ggplot(Combined_Vegetation, aes (x = TallestPlantHeight, y = Estuary, fill = Habitat)) + geom_boxplot(aes(x = TallestPlantHeight, y = Estuary, fill = Habitat))   geom_label(
    label="Look at this!", 
    x=4.1,
    y=20,
    label.padding = unit(0.55, "lines"), # Rectangle size around label
    label.size = 0.35,
    color = "black",
    fill="#69b3a2"
  )
```

Plant Status over Sites

```{r}
plot7 <- ggplot(Combined_Vegetation, aes (x = EstimatedCover, y = Estuary, fill = Status)) + geom_boxplot(aes(x = EstimatedCover, y = Estuary, fill = Status)) + labs(x = "Percent Cover of Vegetation Type") + labs(y = "Estuary Sites") + labs(title = "Status of Plants Across Estuaries")


```

Cordgrass

```{r}
Combined_Vegetation2 <- subset(Combined_Vegetation, ScientificName == "Spartina foliosa")

plot8 <- ggplot(Combined_Vegetation2, aes (x = EstimatedCover, y = Estuary, fill = Habitat)) + geom_boxplot(aes(x = EstimatedCover, y = Estuary, fill = Habitat)) + labs(x = "Percent Cover of Cordgrass") + labs(y = "Estuary Sites") + labs(title = "Cordgrass Percent Cover Across Sites")
```

Cordgrass

```{r}

plot9 <- ggplot(Combined_Cordgrass, aes (x = PlantHeight, y = Estuary)) + geom_boxplot(aes(x = PlantHeight, y = Estuary, fill = Habitat)) + labs(x = "Average Cordgrass Height") + labs(y = "Estuary Sites") + labs(title = "Average Cordgrass Height Across Sites")
```

plot10

```{r}
plot10 <- ggplot(Combined_Cordgrass, aes (x = Abundance, y = Estuary)) + geom_boxplot(aes(x = Abundance, y = Estuary, fill = Habitat))

```

```{r}

shared <- Combined_Vegetation %>%
  select(Group, starts_with())

shared %>%
  group_by(Group) %>%
  summarize(sobs = richness)

shannon_index <- diversity(Combined_Vegetation, index = "shannon")
```

```{r}
#graph 
#Cordgrass - Metrics, height, density (number of stems), number per circle cordgrass, percent cover,



```

Ridgway's Rail

```{r}
RailsAll <-read_excel("RidgwaysRailPBreedingPairs.xlsx", sheet=2)
index <-read_excel("RidgwaysRailPBreedingPairs.xlsx", sheet=1)
Rails <-read_excel("RidgwaysRailPBreedingPairs.xlsx", sheet=3)

head(Rails)
as_tibble(Rails)
```

```{r}
Rails1 <- Rails %>% select("Goleta Slough", "San Elijo Lagoon", "Huntington Beach Wetlands", "Upper Newport Bay", "Kendall-Frost Reserve", "Sweetwater Marsh", "Ventura River Mouth")

Rails2 <- Rails1 |> rename(goletaslough = Goleta Slough, sanelijo = "San Elijo Lagoon", Huntington = "Huntington Beach Wetlands", NewportBay = "Upper Newport Bay", KFR = "Kendall-Frost Reserve", Sweetwater = "Sweetwater Marsh", Ventura = "Ventura River Mouth")
```

```{r}
head(Rails)
Rails2 <- drop_na(Rails)
head(Rails2)

Rails2 <- na.omit(Rails)

str(Rails2)


RailsGraph <- Rails2  |> 
  ggplot(aes(x= Year, y = BreedingPair, colour = Site))+
  geom_line(size = 1)+
  labs(title = "Ridgway's Rail Breeding Pairs from 1980 - 2023")+
  labs(x= "Year")+
  labs(y = "Breeding Pairs")
```
